name: Generate Samba Tar

on:
  push:
    # Publish `master` as Docker `latest` image.
    branches: ["main"]
    
    tags:
      - deb*
      - all*

env:
  # TODO: Change variable to your image's name.
  IMAGE_NAME: generate_samba_tar

jobs:
  # Run tests.
  prepare:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v1

      - name: Run tests
        run: |
          if ! [ -f Dockerfile ]; then
            docker 
          fi
    
  build:
    needs: prepare

    runs-on: ubuntu-latest
    if: github.event_name == 'push'

    steps:
      - name: Checkout code
        uses: actions/checkout@v1
        
      - name: Get current date
        id: date
        run: echo "::set-output name=date::$(date +'%Y%m%d-%H%M%S')"

      - name: Prepare docker file
        id: prepare
        run: |
          . build/version_debian
          echo "::set-output name=os_name::$os_name_deb"
          echo "::set-output name=os_version::$os_version_deb"
          echo "::set-output name=samba_version::$samba_version_deb"
          
          cat Dockerfiles/$os_name/$os_name-$os_version-$samba_version.dockerfile > Dockerfile

          . build/version_ubuntu
          echo "::set-output name=os_name::$os_name_ubuntu"
          echo "::set-output name=os_version::$os_version_ubuntu"
          echo "::set-output name=samba_version::$samba_version_ubuntu"

          cat Dockerfiles/$os_name/$os_name-$os_version-$samba_version.dockerfile > Dockerfile_ubuntu

      - name: Build Docker For Ubuntu Source
        run: |
          docker build --file ./Dockerfile_ubuntu -t generate_tar_for_ubuntu .
          docker run generate_tar_for_ubuntu

      - name: Build Docker For Debian Source
        run: |
          docker build --file ./Dockerfile -t generate_tar_for_debian  .
          docker run generate_tar_for_debian
      
      - name: Get Samba From Docker
        id: get_samba
        run: |
          docker create -ti --name tar_container_for_debian generate_tar_for_debian bash
          docker cp tar_container_for_debian:/opt/samba_debian.tar.gz ./

          docker create -ti --name tar_container_for_ubuntu generate_tar_for_ubuntu bash
          docker cp tar_container_for_ubuntu:/opt/samba_ubuntu.tar.gz ./

          deb_package_name="samba-${{steps.prepare.outputs.os_name_deb}}${{steps.prepare.outputs.os_version_deb}}-${{steps.prepare.outputs.samba_version_deb}}-${{steps.date.outputs.date}}.tar.gz"
          ubuntu_package_name="samba-${{steps.prepare.outputs.os_name_ubuntu}}${{steps.prepare.outputs.os_version_ubuntu}}-${{steps.prepare.outputs.samba_version_ubuntu}}-${{steps.date.outputs.date}}.tar.gz"
          
          mv samba_debian.tar.gz $deb_package_name
          mv samba_ubuntu.tar.gz $ubuntu_package_name

          mkdir samba_directory
          cp $deb_package_name samba_directory/
          cp $ubuntu_package_name samba_directory/
          
          echo ::set-output name=debian_path::$(pwd)/"$deb_package_name"
          echo ::set-output name=ubuntu_path::$(pwd)/"$ubuntu_package_name"
          
          echo ::set-output name=debian_filename::"$deb_package_name"
          echo ::set-output name=ubuntu_filename::"$ubuntu_package_name"

      
          
      - name: Create Release
        id: create_release
        uses: actions/create-release@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: samba_source_${{ github.run_number }}
          release_name: samba_source_${{ github.run_number }}
          body: |
            Changes in this Release
              - ${{ github.event.commits[0].message }}
          draft: false
          prerelease: false
          
      - name: Upload the Samba Source Debian Tar to Release Assets
        id: upload-release-asset-1
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ${{ steps.get_samba.outputs.debian_path }}
          asset_name: ${{ steps.get_samba.outputs.debian_filename }}
          asset_content_type: application/tar+gzip
      
      - name: Upload the Samba Source Ubuntu Tar to Release Assets
        id: upload-release-asset-2
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ${{ steps.get_samba.outputs.ubuntu_path }}
          asset_name: ${{ steps.get_samba.outputs.ubuntu_filename }}
          asset_content_type: application/tar+gzip
          
      - name: Pushes to another repository
        uses: aciklab/samba_source@main
        env:
          API_TOKEN_GITHUB: ${{ secrets.PUSH_TOKEN }}
        with:
          source-directory: 'samba_directory'
          target-directory: 'samba_source'
          destination-github-username: 'aciklab'
          destination-repository-name: 'samba'
          user-email: zekiahmetbayar1@gmail.com
          target-branch: main     
          
