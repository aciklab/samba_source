name: Generate Samba Tar

on:
  push:
    # Publish `master` as Docker `latest` image.
    branches: ["main"]
    
    tags:
      - deb*
      - all*


env:
  # TODO: Change variable to your image's name.
  IMAGE_NAME: generate_samba_tar

jobs:
  # Run tests.
  prepare:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v1

      - name: Run tests
        run: |
          if ! [ -f Dockerfile ]; then
            docker 
          fi
    
  build:
    needs: prepare

    runs-on: ubuntu-latest
    if: github.event_name == 'push'

    steps:
      - name: Checkout code
        uses: actions/checkout@v1
        
      - name: Get current date
        id: date
        run: echo "::set-output name=date::$(date +'%Y%m%d-%H%M%S')"

      - name: Prepare docker file
        id: prepare
        run: |
          . build/version
          echo "::set-output name=os_name::$os_name"
          echo "::set-output name=os_version::$os_version"
          echo "::set-output name=samba_version::$samba_version"
          
          cat Dockerfiles/$os_name/$os_name-$os_version-$samba_version.dockerfile > Dockerfile
          cat Dockerfile
      
      - name: Get Samba From Docker
        id: get_samba
        run: |
          touch 1
          tar -czvf samba.tar.gz 1
          package_name="samba-${{steps.prepare.outputs.os_name}}${{steps.prepare.outputs.os_version}}-${{steps.prepare.outputs.samba_version}}-${{steps.date.outputs.date}}.tar.gz"
          mv samba.tar.gz $package_name
          
          echo ::set-output name=path::$(pwd)/"$package_name"
          echo ::set-output name=filename::"$package_name"
          
      - name: Create Release
        id: create_release
        uses: actions/create-release@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: source-${{steps.prepare.outputs.os_name}}-${{steps.prepare.outputs.os_version}}-${{steps.prepare.outputs.samba_version}}-${{steps.date.outputs.date}}
          release_name: source-${{steps.prepare.outputs.os_name}}-${{steps.prepare.outputs.os_version}}-${{steps.prepare.outputs.samba_version}}-${{steps.date.outputs.date}}
          body: |
            Changes in this Release
              - Will be add.
          draft: false
          prerelease: false
          
      - name: Upload the Samba Source Tar to Release Assets
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ${{ steps.get_samba.outputs.path }}
          asset_name: ${{ steps.get_samba.outputs.filename }}
          asset_content_type: application/tar+gzip
          
      - name: Push samba source to another repository
        run: |
          git config --local user.name "zekiahmetbayar"
          git config --local user.email "zekiahmetbayar1@gmail.com"
          git clone https://github.com/aciklab/samba.git
          mv samba-${{steps.prepare.outputs.os_name}}${{steps.prepare.outputs.os_version}}-${{steps.prepare.outputs.samba_version}}-${{steps.date.outputs.date}}.tar.gz samba/samba_source/
          git add .
          git commit -m "Added new samba source, version: ${{steps.prepare.outputs.samba_version}}"
          git push origin https:://$USERNAME:$REPO_KEY@github.com/aciklab/samba.git HEAD:master --force
        env:
          REPO_KEY: ${{secrets.PUSH_TOKEN}}
          USERNAME: zekiahmetbayar
